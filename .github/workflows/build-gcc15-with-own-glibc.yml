name: Build GCC 15 with pre-built glibc

on:
  workflow_dispatch:
  push:

env:
  PREFIX: /data/local/tmp/gnu
  SYSROOT: /data/local/tmp/Android-tools/usr/ld
  TARGET: aarch64-linux-gnu
  JOBS: 4

jobs:
  build:
    runs-on: ubuntu-22.04-arm
    steps:
      - uses: actions/checkout@v4

      - name: Install build deps
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y \
            build-essential g++ make gawk bison flex texinfo gettext \
            git curl libgmp-dev libmpfr-dev libmpc-dev libisl-dev \
            zlib1g-dev pkg-config python3

      - name: Setup directories
        run: |
          sudo mkdir -p /data/local/tmp
          sudo chown -R $USER:$USER /data/local/tmp
      - uses: actions/checkout@v4
      - name: Debug ld.tar.gz 是否存在
        run: |
          ls -lh ld.tar.gz || { echo "❌ ld.tar.gz 不存在"; exit 1; }
          file ld.tar.gz
      - name: Extract & set fixed SYSROOT
        run: |
    TOOLS_DIR="/data/local/tmp/Android-tools/usr/ld"
    sudo mkdir -p "$TOOLS_DIR"
    sudo chown -R $USER:$USER "$TOOLS_DIR"
    echo "正在解压 ld.tar.gz..."
    tar -xzvf ld.tar.gz -C "$TOOLS_DIR" --checkpoint=.100
    REAL_SYSROOT="$TOOLS_DIR/usr/ld"
    echo "REAL_SYSROOT=$REAL_SYSROOT" >> $GITHUB_ENV
    if [ ! -d "$REAL_SYSROOT" ]; then
      echo "::error::目录 $REAL_SYSROOT 不存在！"
      exit 1
    fi
    ls -l "$REAL_SYSROOT"/
    if [ -d "$REAL_SYSROOT" ]; then
      ln -sfn "$REAL_SYSROOT" "$REAL_SYSROOT/usr" || echo "符号链接创建失败（可能已存在）"
    fi
      - name: Clone GCC
        run: |
          cd /data/local/tmp
          git clone --depth=1 -b master git://gcc.gnu.org/git/gcc.git

      - name: Build GCC
        run: |
          cd /data/local/tmp
          mkdir build-gcc && cd build-gcc
          ../gcc/configure \
            --prefix=$PREFIX \
            --target=$TARGET \
            --with-sysroot=$SYSROOT \
            --enable-languages=c,c++,lto \
            --enable-threads=posix \
            --enable-libgomp \
            --enable-libssp \
            --enable-libquadmath \
            --enable-lto \
            --enable-shared \
            --disable-multilib
          make -j$JOBS
          make install

      - name: Package toolchain
        run: |
          cd /data/local/tmp
          tar czf gcc15-with-prebuilt-glibc.tar.gz gnu/

      - uses: actions/upload-artifact@v4
        with:
          name: gcc15-with-prebuilt-glibc
          path: /data/local/tmp/gcc15-with-prebuilt-glibc.tar.gz
