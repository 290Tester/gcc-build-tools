on: [push, workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-22.04          # ← 换成 x86_64
    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y \
            build-essential g++ g++-aarch64-linux-gnu \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu \
            gawk bison flex texinfo gettext \
            git curl libgmp-dev libmpfr-dev libmpc-dev libisl-dev \
            zlib1g-dev pkg-config python3 \
            linux-libc-dev-arm64-cross lld llvm

            - name: Configure GCC
        run: |
          set -e
          export lt_cv_sys_max_cmd_len=32768
          export ac_cv_func_malloc_0_nonnull=yes
          export ac_cv_func_realloc_0_nonnull=yes
          export ac_cv_func_calloc_0_nonnull=yes
          export ac_cv_prog_cc_cross=yes
          export cross_compiling=yes
          export cc_cv_works=no

          cd /data/local/tmp
          rm -rf build-gcc                     # 保险：先删
          mkdir build-gcc && cd build-gcc
          ../gcc/configure \
            --build=x86_64-linux-gnu \
            --host=aarch64-linux-gnu \
            --target=aarch64-linux-gnu \
            --prefix="$PREFIX" \
            --with-sysroot="$SYSROOT" \
            --enable-languages=c,c++,lto \
            --enable-threads=posix \
            --enable-libgomp \
            --enable-libssp \
            --enable-libquadmath \
            --enable-lto \
            --enable-shared \
            --disable-multilib \
            --with-newlib \
            --disable-nls \
            --disable-bootstrap \
            --disable-shared \
            --enable-static \
            --with-dynamic-linker=/data/local/tmp/Android-tools/usr/ld/lib/ld-linux-aarch64.so.1 \
            LDFLAGS_FOR_BUILD="-Wl,-rpath,/data/local/tmp/Android-tools/usr/ld/lib" \
            LDFLAGS_FOR_TARGET="-Wl,-rpath,/data/local/tmp/Android-tools/usr/ld/lib"


      - name: Build & install
        run: |
          cd build-gcc
          make -j"$JOBS"
          make install
