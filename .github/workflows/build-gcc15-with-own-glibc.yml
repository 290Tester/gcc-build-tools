name: Build GCC 15 with pre-built glibc

on:
  workflow_dispatch:
  push:

env:
  PREFIX:   /data/local/tmp/gnu
  SYSROOT:  /data/local/tmp/Android-tools/usr/ld
  SYSROOT1:  /data/local/tmp/Android-tools/usr/ld/usr
  TARGET:   aarch64-linux-gnu
  JOBS:     4

jobs:
  build:
    runs-on: ubuntu-22.04-arm   # GitHub 原生 ARM 机
    steps:
      - name: Checkout workflow repo
        uses: actions/checkout@v4

      #----------------------------------------------------------
      # 1. 安装编译依赖 + aarch64 kernel headers
      #----------------------------------------------------------
      - name: Install build deps
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y \
            build-essential g++ make gawk bison flex texinfo gettext \
            git curl libgmp-dev libmpfr-dev libmpc-dev libisl-dev \
            zlib1g-dev pkg-config python3 \
            linux-libc-dev-arm64-cross

      #----------------------------------------------------------
      # 2. 准备目录并查看 tar 包结构
      #----------------------------------------------------------
      - name: Prepare workspace
        run: |
          sudo mkdir -p "$SYSROOT"
          sudo mkdir -p "$SYSROOT1"
          sudo chown -R $USER:$USER /data/local/tmp

      - name: Debug tarball layout
        run: |
          ls -lh ld.tar.gz
          tar -tzf ld.tar.gz | head -20

      #----------------------------------------------------------
      # 3. 解压 glibc（自动适配两种目录结构）
      #----------------------------------------------------------
      - name: Extract pre-built glibc
        run: |
          set -e
          TMPDIR="/data/local/tmp"
          tar -tzf ld.tar.gz | head -n1 | grep -q '^usr/' && HAS_USR=1 || HAS_USR=0
          if [ "$HAS_USR" = "1" ]; then
              # tarball 自带 usr/ -> 直接解压到 Android-tools
              tar -xzf ld.tar.gz -C "$TMPDIR"/Android-tools --checkpoint=.100
          else
              # tarball 只有 lib/ include/ ... -> 解压到 usr/ld
              mkdir -p "$TMPDIR"/Android-tools/usr
              tar -xzf ld.tar.gz -C "$TMPDIR"/Android-tools/usr/ld --checkpoint=.100
              tar -xzf ld.tar.gz -C "$TMPDIR"/Android-tools/usr/ld/usr --checkpoint=.100
          fi
          ls -l "$SYSROOT"/usr

      #----------------------------------------------------------
      # 4. 软链 kernel headers（不复制）
      #----------------------------------------------------------
      - name: Link kernel headers
        run: |
          K=/usr/aarch64-linux-gnu/include
          ln -sfn "$K/linux"       "$SYSROOT/usr/include/linux"
          ln -sfn "$K/asm"         "$SYSROOT/usr/include/asm"
          ln -sfn "$K/asm-generic" "$SYSROOT/usr/include/asm-generic"

      #----------------------------------------------------------
      # 5. 克隆 GCC 15 源码
      #----------------------------------------------------------
      - name: Clone GCC
        run: |
          cd /data/local/tmp
          git clone --depth=1 -b master git://gcc.gnu.org/git/gcc.git

      #----------------------------------------------------------
      # 6. 配置 & 构建
      #----------------------------------------------------------
      - name: Configure GCC
        run: |
          cd /data/local/tmp
          mkdir build-gcc && cd build-gcc
          ../gcc/configure \
            --prefix="$PREFIX" \
            --target="$TARGET" \
            --with-sysroot="$SYSROOT" \
            --enable-languages=c,c++,lto \
            --enable-threads=posix \
            --enable-libgomp \
            --enable-libssp \
            --enable-libquadmath \
            --enable-lto \
            --enable-shared \
            --disable-multilib \
            --with-newlib \
            --disable-nls \
            --disable-bootstrap \
            --disable-shared \
            --enable-static \
            --with-dynamic-linker=/data/local/tmp/Android-tools/usr/ld/lib/ld-linux-aarch64.so.1

      - name: Build & install
        run: |
          cd /data/local/tmp/build-gcc
          make -j"$JOBS"
          make install

      #----------------------------------------------------------
      # 7. 打包 & 上传成品
      #----------------------------------------------------------
      - name: Package toolchain
        run: |
          cd /data/local/tmp
          tar czf gcc15-with-prebuilt-glibc.tar.gz gnu/

      - uses: actions/upload-artifact@v4
        with:
          name: gcc15-with-prebuilt-glibc
          path: /data/local/tmp/gcc15-with-prebuilt-glibc.tar.gz
